{"version":3,"sources":["TextBox.jsx","CarProgress.jsx","HostControls.jsx","GameWindow.jsx","Nickname.jsx","Rooms.jsx","App.js","index.js"],"names":["TextBox","master","setPerc","socket","roomCode","useState","user","setUser","display","setDisplay","useEffect","emit","txt","main","newTxt","i","length","slice","CheckForBaddies","className","unselectable","dangerouslySetInnerHTML","__html","type","placeholder","value","onChange","e","target","autoFocus","CarProgress","perc","nick","color","place","style","filter","left","src","HostControls","room","onClick","code","GameWindow","player","isHost","start","text","players","map","p","progress","Nickname","setNicked","setNick","Rooms","setRoomCode","io","socketIOClient","App","nicked","setRoom","setPlayer","on","data","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a0e1470.chunk.js","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\n\r\nexport const TextBox = ({master, setPerc, socket, roomCode}) => {\r\n    const [user, setUser] = useState(\"\");\r\n    const [display, setDisplay] = useState(master);\r\n\r\n    const Change = (e) => {\r\n        setUser(e.target.value);\r\n    }\r\n\r\n    const CheckForBaddies = (txt, main) => {\r\n        var newTxt = main;\r\n        for (let i = 0; i<txt.length; i++) {\r\n            if (txt[i] !== main[i]) {\r\n                newTxt = main.slice(0, i) + \"</span><span class=Wrong>\" + main.slice(i);\r\n                return newTxt;\r\n            }\r\n        }\r\n        return newTxt;\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (user === master) socket.emit(\"Completed\", roomCode);\r\n        let txt = master;\r\n        txt = CheckForBaddies(user, master); // Adds span where wrong begins\r\n        if (txt === master) {\r\n            txt = txt.slice(0, user.length) + \"</span>\" + txt.slice(user.length);\r\n        }\r\n        else {\r\n            txt = txt.slice(0, user.length+25) + \"</span>\" + txt.slice(user.length+25); // add span to end\r\n        }\r\n        txt = `<span class=\"HighlightedText\">${txt}`; // add span to begginning\r\n        setDisplay(txt);\r\n        setPerc((user.length/master.length)*100);\r\n    }, [user])\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"TextBox\">\r\n                <p className=\"DisplayText\" unselectable=\"off\" dangerouslySetInnerHTML={{__html:display}} />\r\n            </div>\r\n            <input className=\"InputBox\" type=\"text\" placeholder=\"Enter Text Here...\" value={user} onChange={Change} autoFocus/>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport const CarProgress = ({perc, nick, color, place}) => {\r\n    return(\r\n        <div className=\"Car-wrapper\">\r\n            <h3 style={{filter: `hue-rotate(${color}deg)`}}>{nick}<br /><br />{place}</h3>\r\n            <div className=\"CarBox\">\r\n                <img className=\"Car\" style={{left: `${perc}%`, filter: `hue-rotate(${color}deg)` }} src=\"https://cdn.pixabay.com/photo/2014/03/25/15/25/racing-car-296772_1280.png\" />\r\n                <img className=\"FinishLine\" src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQGCCUprIO5xJj4_9DLJXRGyAR7uIvxrNDsJQ&usqp=CAU\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport const HostControls = ({socket, room}) => {\r\n    return(\r\n        <div>\r\n            <button className=\"StartButton\" onClick={() => socket.emit(\"Start\", room.code)}>Start</button>\r\n            <button className=\"RestartButton\" onClick={() => socket.emit(\"Restart\", room.code)}>Restart</button>\r\n        </div>\r\n    )\r\n}","import React, {useState, useEffect} from \"react\";\r\nimport { TextBox } from \"./TextBox\";\r\nimport { CarProgress } from \"./CarProgress\";\r\nimport { HostControls } from \"./HostControls\";\r\n\r\n\r\nexport const GameWindow = ({room, socket, player}) => {\r\n    const [perc, setPerc] = useState(0);\r\n\r\n    useEffect(() => {\r\n        socket.emit(\"UpdateProgress\", room.code, perc);\r\n    },[perc])\r\n\r\n    return(\r\n        <div className=\"GameWindow\">\r\n            <h3>Room Code {room.code}</h3>\r\n            {\r\n                player.isHost &&\r\n                <HostControls socket={socket} room={room} />\r\n            }\r\n            {\r\n                room.start &&\r\n                <TextBox master={room.text} setPerc={setPerc} socket={socket} roomCode={room.code} />\r\n            }\r\n            <div className=\"Cars\">\r\n                {\r\n                    room.players.map((p) => {\r\n                        return <CarProgress perc={p.progress} nick={p.nick} color={p.color} place={p.place} />\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState } from \"react\";\r\n\r\nexport const Nickname = ({setNicked, socket}) => {\r\n    const [nick, setNick] = useState(\"\");\r\n    \r\n    const Submit = () => {\r\n        setNicked(true);\r\n        socket.emit(\"CreateNickname\", nick);\r\n    }\r\n\r\n    const ChangeHandle = (e) => {\r\n        if (e.target.value.length <= 12) {\r\n            setNick(e.target.value);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h2>Enter Your Nickname</h2>\r\n            <input type=\"text\" placeholder=\"Enter Nickname Here...\" onChange={ChangeHandle} value={nick} />\r\n            <button onClick={Submit}>Submit</button>\r\n        </div>\r\n    )\r\n}","import React, {useState} from \"react\";\r\n\r\nexport const Rooms = ({socket}) => {\r\n    const [roomCode, setRoomCode] = useState(\"\");\r\n\r\n    const JoinRoom = () => {\r\n        socket.emit(\"JoinRoom\", roomCode);\r\n    }\r\n\r\n    const CreateRoom = () => {\r\n        socket.emit(\"CreateRoom\");\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <input type=\"text\" placeholder=\"Enter Room Code...\" value={roomCode} onChange={(e) => setRoomCode(e.target.value)} />\r\n            <input type=\"button\" value=\"Join Room\" onClick={JoinRoom} />\r\n            <input type=\"button\" value=\"Create Room\" onClick={CreateRoom} />\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from \"react\";\nimport './App.css';\nimport { GameWindow } from \"./GameWindow\";\nimport socketIOClient from \"socket.io-client\";\nimport { Nickname } from \"./Nickname\";\nimport { Rooms } from \"./Rooms\";\n\nconst ENDPOINT = \"http://localhost:5000\";\nconst io = socketIOClient();\n\nfunction App() {\n  const [nicked, setNicked] = useState(false);\n  const [room, setRoom] = useState();\n  const [player, setPlayer] = useState();\n\n  useEffect(() => {\n    io.on(\"RoomInfo\", (data) => {\n      for (let p of data.players) {\n        if (p.id === io.id) {\n          setPlayer(p);\n        }\n      }\n      setRoom(data);\n    })\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <h1>Type Racer</h1>\n      {\n        nicked\n        ?\n          room \n          ? <GameWindow room={room} player={player} socket={io} />\n          : <Rooms socket={io} />\n        : <Nickname setNicked={setNicked} socket={io} />\n      }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}